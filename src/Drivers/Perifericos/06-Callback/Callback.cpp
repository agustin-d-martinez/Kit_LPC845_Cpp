/*******************************************************************************************************************************//**
 *
 * @file		Callback.cpp
 * @brief		funciones miembro de la clase Callback
 * @date		04 ene. 2025
 * @author		Tecnico Martinez Agustin
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** INCLUDES
 **********************************************************************************************************************************/
#include <Perifericos/06-Callback/Callback.h>

/***********************************************************************************************************************************
 *** DEFINES PRIVADOS AL MODULO
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** MACROS PRIVADAS AL MODULO
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** TIPOS DE DATOS PRIVADOS AL MODULO
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** TABLAS PRIVADAS AL MODULO
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** VARIABLES GLOBALES PUBLICAS
 **********************************************************************************************************************************/
vector <Callback*> g_Handler;

/***********************************************************************************************************************************
 *** VARIABLES GLOBALES PRIVADAS AL MODULO
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *** IMPLEMENTACION DE LOS METODODS DE LA CLASE
 **********************************************************************************************************************************/
/**
 * \fn uint8_t Callback::SetInterrupt ( void )
 * \brief Activa la interrupción.
 * \details Coloca al objeto dentro de la lista del handler systick.
*/
void Callback::SetInterrupt( void )
{
	bool exist = false;
	for ( auto aux = g_Handler.begin() ; aux != g_Handler.end() ; aux++ )
	{
		if ( (*aux) == this )
			exist = true;
	}
	if ( !exist )
		g_Handler.push_back(this);
}
/**
 * \fn uint8_t Callback::UnSetInterrupt ( void )
 * \brief Desactiva la interrupción.
 * \details Borra de la lista handler al objeto actual.
*/
void Callback::UnSetInterrupt( void )
{
	bool finish = false;
	for ( uint32_t aux = 0 ; (aux < g_Handler.size() && !finish); aux++ )
	{
		if ( g_Handler[aux] == this)
		{
			g_Handler.erase(g_Handler.begin() + aux);
			finish = true;
		}
	}
}
